<?php

/**
 * This file is part of the brandon14/amazon-sdk-php package.
 *
 * MIT License
 *
 * Copyright (c) 2022 Brandon Clothier
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

declare(strict_types=1);

/**
 * OrderTest.
 *
 * PHP version ^7.2 || ^8.0
 *
 * @category Class
 *
 * @author   Swagger Codegen team
 *
 * @see     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Selling Partner API for Orders.
 *
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: v0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace TNT\Amazon\Orders\V0\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * OrderTest Class Doc Comment.
 *
 * @category    Class
 * @description Order information.
 *
 * @author      Swagger Codegen team
 *
 * @see        https://github.com/swagger-api/swagger-codegen
 */
class OrderTest extends TestCase
{
    /**
     * Setup before running any test case.
     */
    public static function setUpBeforeClass(): void
    {
        // Intentionally left blank.
    }

    /**
     * Setup before running each test case.
     */
    protected function setUp(): void
    {
        // Intentionally left blank.
    }

    /**
     * Clean up after running each test case.
     */
    protected function tearDown(): void
    {
        // Intentionally left blank.
    }

    /**
     * Clean up after running all test cases.
     */
    public static function tearDownAfterClass(): void
    {
        // Intentionally left blank.
    }

    /**
     * Test "Order".
     */
    public function test_order()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "amazon_order_id".
     */
    public function test_property_amazon_order_id()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "seller_order_id".
     */
    public function test_property_seller_order_id()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_date".
     */
    public function test_property_purchase_date()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_update_date".
     */
    public function test_property_last_update_date()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_status".
     */
    public function test_property_order_status()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fulfillment_channel".
     */
    public function test_property_fulfillment_channel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_channel".
     */
    public function test_property_sales_channel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_channel".
     */
    public function test_property_order_channel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ship_service_level".
     */
    public function test_property_ship_service_level()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_total".
     */
    public function test_property_order_total()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "number_of_items_shipped".
     */
    public function test_property_number_of_items_shipped()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "number_of_items_unshipped".
     */
    public function test_property_number_of_items_unshipped()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_execution_detail".
     */
    public function test_property_payment_execution_detail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_method".
     */
    public function test_property_payment_method()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_method_details".
     */
    public function test_property_payment_method_details()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "marketplace_id".
     */
    public function test_property_marketplace_id()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipment_service_level_category".
     */
    public function test_property_shipment_service_level_category()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "easy_ship_shipment_status".
     */
    public function test_property_easy_ship_shipment_status()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cba_displayable_shipping_label".
     */
    public function test_property_cba_displayable_shipping_label()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_type".
     */
    public function test_property_order_type()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "earliest_ship_date".
     */
    public function test_property_earliest_ship_date()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "latest_ship_date".
     */
    public function test_property_latest_ship_date()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "earliest_delivery_date".
     */
    public function test_property_earliest_delivery_date()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "latest_delivery_date".
     */
    public function test_property_latest_delivery_date()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_business_order".
     */
    public function test_property_is_business_order()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_prime".
     */
    public function test_property_is_prime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_premium_order".
     */
    public function test_property_is_premium_order()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_global_express_enabled".
     */
    public function test_property_is_global_express_enabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "replaced_order_id".
     */
    public function test_property_replaced_order_id()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_replacement_order".
     */
    public function test_property_is_replacement_order()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "promise_response_due_date".
     */
    public function test_property_promise_response_due_date()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_estimated_ship_date_set".
     */
    public function test_property_is_estimated_ship_date_set()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_sold_by_ab".
     */
    public function test_property_is_sold_by_ab()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_iba".
     */
    public function test_property_is_iba()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "default_ship_from_location_address".
     */
    public function test_property_default_ship_from_location_address()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buyer_invoice_preference".
     */
    public function test_property_buyer_invoice_preference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buyer_tax_information".
     */
    public function test_property_buyer_tax_information()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fulfillment_instruction".
     */
    public function test_property_fulfillment_instruction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_ispu".
     */
    public function test_property_is_ispu()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_access_point_order".
     */
    public function test_property_is_access_point_order()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "marketplace_tax_info".
     */
    public function test_property_marketplace_tax_info()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "seller_display_name".
     */
    public function test_property_seller_display_name()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_address".
     */
    public function test_property_shipping_address()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buyer_info".
     */
    public function test_property_buyer_info()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "automated_shipping_settings".
     */
    public function test_property_automated_shipping_settings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "has_regulated_items".
     */
    public function test_property_has_regulated_items()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "electronic_invoice_status".
     */
    public function test_property_electronic_invoice_status()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
